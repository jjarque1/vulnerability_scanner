import requests

def identify_service(sock, target, port):
    """Attempt to grab the banner (service version) from the open port and check for CVEs."""
    try:
        # Attempt to grab the banner (service version)
        sock.send(b'\r\n')
        banner = sock.recv(1024).decode().strip()
        if banner:
            print(f"Service on port {port}: {banner}")
            check_cve(banner)
    except Exception as e:
        print(f"Error identifying service on port {port}: {e}")

def check_cve(service_banner):
    """Check if the service version has known vulnerabilities using CVE data."""
    print(f"Checking CVE database for {service_banner}...")
    try:
        response = requests.get(f"https://services.nvd.nist.gov/rest/json/cves/1.0?keyword={service_banner}")
        if response.status_code == 200:
            data = response.json()
            if data.get("result") and data["result"].get("CVE_Items"):
                for item in data["result"]["CVE_Items"]:
                    cve_id = item["cve"]["CVE_data_meta"]["ID"]
                    description = item["cve"]["description"]["description_data"][0]["value"]
                    print(f"- {cve_id}: {description}")
            else:
                print("No known vulnerabilities found.")
        else:
            print(f"Failed to fetch CVE data: {response.status_code}")
    except Exception as e:
        print(f"Error checking CVE database: {e}")