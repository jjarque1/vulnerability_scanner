import os
import platform
import requests
import socket
import speedtest as st


def ping_target(target):
    """Ping the target to check if it's reachable."""
    param = "-n" if platform.system().lower() == "windows" else "-c"
    command = f"ping {param} 4 {target}"
    response = os.system(command)

    if response == 0:
        print(f"Target {target} is reachable.")
    else:
        print(f"Target {target} is not reachable.")


def traceroute_target(target):
    """Perform a traceroute to the target."""
    command = "tracert" if platform.system().lower() == "windows" else "traceroute"
    os.system(f"{command} {target}")


def get_public_ip():
    """Retrieve the public IP address of the machine running the scanner."""
    try:
        response = requests.get("https://api.ipify.org?format=json")
        if response.status_code == 200:
            return response.json().get("ip")
        else:
            print("Failed to retrieve public IP address.")
            return None
    except Exception as e:
        print(f"Error retrieving public IP address: {e}")
        return None


def check_local_open_ports(target):
    """Check open ports on the local machine using a basic socket connection."""
    print(f"Scanning open ports on {target} (local machine)...")
    open_ports = []
    for port in range(1, 1025):
        try:
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                s.settimeout(0.5)
                if s.connect_ex((target, port)) == 0:
                    open_ports.append(port)
                    print(f"Port {port} is open.")
        except Exception as e:
            print(f"Error checking port {port}: {e}")
    if not open_ports:
        print("No open ports found.")
    else:
        print(f"Open ports: {open_ports}")


def check_internet_speed():
    """Check the internet speed of the machine running the scanner."""
    try:
        speed_test = st.Speedtest()
        print("Checking download speed...")
        download_speed = speed_test.download() / 1_000_000  # Convert to Mbps
        print(f"Download Speed: {download_speed:.2f} Mbps")

        print("Checking upload speed...")
        upload_speed = speed_test.upload() / 1_000_000  # Convert to Mbps
        print(f"Upload Speed: {upload_speed:.2f} Mbps")

        print("Checking ping...")
        ping_result = speed_test.results.ping
        print(f"Ping: {ping_result} ms")
    except Exception as e:
        print(f"Error checking internet speed: {e}")